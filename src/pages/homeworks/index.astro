---
import ListGroup from "@/components/ListGroup.astro";
import ListItem from "@/components/ListItem.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const dateFormatter = new Intl.DateTimeFormat("fr", { dateStyle: "full" });
const homeworks = await getCollection("homeworks");
const sortedHomeworks = homeworks.sort(
  (a, b) => a.data.date.getTime() - b.data.date.getTime()
);
const groupedHomeworks = sortedHomeworks.reduce((map, homework) => {
  const date = dateFormatter.format(homework.data.date);
  const subject = homework.data.subject;
  if (!map.has(date)) {
    map.set(date, new Map<string, Array<(typeof homeworks)[number]>>());
  }

  if (!map.get(date)!.has(subject)) {
    map.get(date)!.set(subject, []);
  }

  map.get(date)!.get(subject)!.push(homework);

  return map;
}, new Map<string, Map<string, Array<(typeof homeworks)[number]>>>());
console.log(groupedHomeworks);
---

<BaseLayout pageTitle="2B Cordeliers - Devoirs à faire">
  <h1>Devoirs à faire</h1>
  {
    Array.from(groupedHomeworks).map(([date, dateHomeworks]) => {
      return (
        <>
          <h2>{date}</h2>
          <ListGroup>
            {Array.from(dateHomeworks).map(([subject, subjectHomeworks]) => {
              return (
                <>
                  <ListItem header={true}>{subject}</ListItem>
                  {subjectHomeworks.map((homework) => {
                    let target = "/homeworks/" + homework.slug;
                    return (
                      <ListItem href={target}>{homework.data.title}</ListItem>
                    );
                  })}
                </>
              );
            })}
          </ListGroup>
        </>
      );
    })
  }
</BaseLayout>

<style>
  h2::first-letter {
    text-transform: uppercase;
  }
</style>

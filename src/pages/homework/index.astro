---
import ListGroup from "@/components/ListGroup.astro";
import ListItem from "@/components/ListItem.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const dateFormatter = new Intl.DateTimeFormat("fr", { dateStyle: "full" });
const homework = await getCollection("homework");
const sortedHomework = homework.sort(
  (a, b) => a.data.date.getTime() - b.data.date.getTime()
);
const groupedHomework = sortedHomework.reduce((map, item) => {
  const date = dateFormatter.format(item.data.date);
  const subject =
    item.data.subject + (item.data.group ? ` - ${item.data.group}` : "");
  if (!map.has(date)) {
    map.set(date, new Map<string, Array<(typeof homework)[number]>>());
  }

  if (!map.get(date)!.has(subject)) {
    map.get(date)!.set(subject, []);
  }

  map.get(date)!.get(subject)!.push(item);

  return map;
}, new Map<string, Map<string, Array<(typeof homework)[number]>>>());
---

<BaseLayout pageTitle="2B Cordeliers - Devoirs Ã  faire">
  <h1>Devoirs Ã  faire</h1>
  {
    Array.from(groupedHomework).map(([date, dateHomework]) => {
      return (
        <>
          <h2>{date}</h2>
          <ListGroup>
            {Array.from(dateHomework).map(([subject, subjectHomework]) => {
              return (
                <>
                  <ListItem header={true} text={subject} />
                  {subjectHomework.map((item) => {
                    let target = "/homework/" + item.slug;
                    return <ListItem text={item.data.title} href={target} />;
                  })}
                </>
              );
            })}
          </ListGroup>
        </>
      );
    })
  }
</BaseLayout>

<style>
  h2::first-letter {
    text-transform: uppercase;
  }
</style>
